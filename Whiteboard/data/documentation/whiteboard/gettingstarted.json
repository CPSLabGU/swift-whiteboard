{"metadata":{"role":"article","modules":[{"name":"Whiteboard"}],"roleHeading":"Article","title":"Getting started with the Whiteboard"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/GettingStarted"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/whiteboard\/gettingstarted"]}],"sections":[],"abstract":[{"type":"text","text":"Create a Whiteboard, then read (get) or write (post) messages."}],"hierarchy":{"paths":[["doc:\/\/Whiteboard\/documentation\/Whiteboard"]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A whiteboard is shared memory area structured into messages that can be written to and read from by multiple threads or processes.  Each whiteboard is memory-mapped to a named file so it can be accessed by unrelated processes and persist beyond the life-span of a process."}]},{"anchor":"Creating-a-Whiteboard","type":"heading","level":3,"text":"Creating a Whiteboard"},{"type":"paragraph","inlineContent":[{"text":"To create a whiteboard, you initialise a new instance of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Whiteboard"},{"text":" class.  Optionally, you can provide a name for the whiteboard, otherwise the created instance will access the global, default whiteboard, as the following code shows:","type":"text"}]},{"type":"codeListing","code":["let whiteboard = Whiteboard()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to give your whiteboard a unique name (shared between threads and processes that want to use this whiteboard), you pass in a name into the initialiser, e.g.:"}]},{"type":"codeListing","code":["let namedWhiteboard = Whiteboard(name: \"special-whiteboard\")"],"syntax":"swift"},{"anchor":"Naming-Considerations","type":"heading","level":3,"text":"Naming Considerations"},{"type":"paragraph","inlineContent":[{"text":"All processes and threads sharing a whiteboard need to agree on the structure and semantics of each whiteboard message.  In other words, a whiteboard defines a data-centric view of inter-process communication.  This is particularly important for the default Global Whiteboard.  All processes and threads need to know the ABI and whiteboard slots (locations) of the data they access.  Processes that want to share different data sets can create their own whiteboards (using unique and distinct names) that correspond to the data structures and message slots they want to use.","type":"text"}]},{"anchor":"Defining-Message-Slots","type":"heading","level":3,"text":"Defining Message Slots"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The semantics of a whiteboard message is defined by its message slot.  In the underlying "},{"code":"gusimplewhiteboard","type":"codeVoice"},{"type":"text","text":" implementation, a message slot is simply a numerical index into the array of messages stored on the whiteboard.  In Swift, it is recommended to use an "},{"code":"enum","type":"codeVoice"},{"type":"text","text":" that is shared between the processes using the whiteboard and globally defines the whiteboard slot numbers to use.  This can be achieved by conforming to the "},{"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlot","isActive":true},{"type":"text","text":" protocol:"}]},{"type":"codeListing","code":["enum GlobalWhiteboardSlot: Int, WhiteboardSlot {","    case interiorTemperature = 1","    case exteriorTemperature = 2","    case position = 3","    case velocity = 4","    case acceleration = 5","    case forwardActuatorPower = 10","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: whether to specify explicit slot numbers (as in the example above) is a design decision.  They can assist with retaining specific slots over time as message types get added or removed from the system."}]},{"anchor":"Strongly-Typed-Messages","type":"heading","level":3,"text":"Strongly Typed Messages"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While the underlying whiteboard only provides a shared memory space for each message slot, it is important for all subsystems to agree on the ABI and semantics of these messages.  In Swift, this can be achieved by creating a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" that represents the data of a whiteboard message.  To assign a specific whiteboard slot to this message, conform it to the "},{"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted","isActive":true},{"type":"text","text":" protocol that defines a static "},{"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted\/whiteboardSlot","isActive":true},{"type":"text","text":" property, corresponding to the slot number for that message:"}]},{"type":"codeListing","code":["struct ForwardActuatorPower: WhiteboardSlotted, Equatable {","    static let whiteboardSlot: GlobalWhiteboardSlot = .forwardActuatorPower","    let milliwatts: Int32","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Note: for stored properties it is generally advisable to use types with clearly visible semantics (such as ","type":"text"},{"code":"Int32","type":"codeVoice"},{"text":" for a signed 32-bit integer) over types (such as ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":") whose size and ABI depends on additional factors such as host or CPU architecture (e.g. 32 bits vs 64 bits).","type":"text"}]},{"anchor":"Posting-Messages","type":"heading","level":3,"text":"Posting Messages"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Posting a whiteboard message that conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted"},{"type":"text","text":" is as simple as calling the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Whiteboard\/post(message:)"},{"type":"text","text":" method on the whiteboard, for example:"}]},{"type":"codeListing","code":["let forwardActuatorPower = ForwardActuatorPower(milliwatts: 123)","whiteboard.post(message: forwardActuatorPower)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: only a single writer can post to the whiteboard concurrently with any number of readers.  Multiple writers attempting to post concurrently results in undefined behaviour."}]},{"anchor":"Getting-Messages","type":"heading","level":3,"text":"Getting Messages"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Retrieving a message from the whiteboard is as simple as calling the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Whiteboard\/getMessage()"},{"type":"text","text":" method on the whiteboard, for example:"}]},{"type":"codeListing","code":["let forwardActuatorPower: ForwardActuatorPower = whiteboard.getMessage()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: the slot of a "},{"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted","isActive":true},{"type":"text","text":" message is determined by its type (through its static "},{"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted\/whiteboardSlot","isActive":true},{"type":"text","text":" property)."}]},{"type":"paragraph","inlineContent":[{"text":"Any number of readers are allowed to retrieve messages concurrently from a whiteboard slot.  Ensure that the message you are trying to get has already been posted at least once to avoid reading random bits.  For more details and limits, see the section on Concurrency Considerations.","type":"text"}]}]}],"kind":"article","references":{"doc://Whiteboard/documentation/Whiteboard/Whiteboard/getMessage()":{"abstract":[{"type":"text","text":"Get a message from the whiteboard"}],"type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Whiteboard\/getMessage()","kind":"symbol","title":"getMessage()","url":"\/documentation\/whiteboard\/whiteboard\/getmessage()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getMessage","kind":"identifier"},{"text":"<","kind":"text"},{"text":"MessageType","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"MessageType","kind":"typeIdentifier"}]},"doc://Whiteboard/documentation/Whiteboard/Whiteboard/post(message:)":{"abstract":[{"type":"text","text":"Post the given message to the whiteboard"}],"type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Whiteboard\/post(message:)","kind":"symbol","title":"post(message:)","url":"\/documentation\/whiteboard\/whiteboard\/post(message:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"post"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MessageType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"message"},{"text":": ","kind":"text"},{"text":"MessageType","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Whiteboard/documentation/Whiteboard":{"abstract":[],"type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard","kind":"symbol","title":"Whiteboard","url":"\/documentation\/whiteboard","role":"collection"},"doc://Whiteboard/documentation/Whiteboard/WhiteboardSlot":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WhiteboardSlot"}],"type":"topic","url":"\/documentation\/whiteboard\/whiteboardslot","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlot","title":"WhiteboardSlot","abstract":[{"type":"text","text":"Marker Protocol for a "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":" type (such as an "},{"type":"codeVoice","code":"enum"},{"type":"text","text":") that denotes a whiteboard slot"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhiteboardSlot"}],"role":"symbol"},"doc://Whiteboard/documentation/Whiteboard/WhiteboardSlotted":{"abstract":[{"type":"text","text":"Protocol for a type that has a statically-assigned whiteboard slot"}],"navigatorTitle":[{"kind":"identifier","text":"WhiteboardSlotted"}],"type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted","kind":"symbol","title":"WhiteboardSlotted","url":"\/documentation\/whiteboard\/whiteboardslotted","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhiteboardSlotted"}]},"doc://Whiteboard/documentation/Whiteboard/WhiteboardSlotted/whiteboardSlot":{"required":true,"abstract":[{"type":"text","text":"The whiteboard slot assigned to messages of this type"}],"type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted\/whiteboardSlot","kind":"symbol","title":"whiteboardSlot","url":"\/documentation\/whiteboard\/whiteboardslotted\/whiteboardslot","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"whiteboardSlot"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Slot"}]},"doc://Whiteboard/documentation/Whiteboard/Whiteboard":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Whiteboard"}],"type":"topic","url":"\/documentation\/whiteboard\/whiteboard","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Whiteboard","title":"Whiteboard","abstract":[{"type":"text","text":"A simple whiteboard class that allows non-blocking put and get operations."},{"type":"text","text":" "},{"type":"text","text":"This whiteboard is safe for concurrent reader access, provided that there"},{"type":"text","text":" "},{"type":"text","text":"there is only a single writer attempting to access the whiteboard at any"},{"type":"text","text":" "},{"type":"text","text":"given time."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whiteboard"}],"role":"symbol"}}}